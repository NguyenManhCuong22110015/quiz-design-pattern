import dotenv from 'dotenv';
dotenv.config();

import { GoogleGenerativeAI } from '@google/generative-ai';

const genAI = new GoogleGenerativeAI(process.env.GOOGLE_API_KEY);
 

export async function generateContent(prompt) {
    const model = genAI.getGenerativeModel({ model: "gemini-1.5-flash" });

    const result = await model.generateContent(prompt);
     const response = result.response;
    const text = await response.text();
    return text.trim();
}


export async function setQuiz(topics, questionTypes, numberOfQuestions, difficulty) {
    console.log("üí° Topics:", topics);
    console.log("üé®Question Types:", questionTypes);
    console.log("Number Of Questions:", numberOfQuestions);
    
    return {
        topics,
        questionTypes,
        numberOfQuestions,
        difficulty
    };
}
export async function describeWebsiteInfo(websiteType, mainFeatures, targetAudience, purpose) {
  // T·∫°o prompt ƒë·ªÉ Gemini hi·ªÉu v√† tr·∫£ v·ªÅ m√¥ t·∫£ s√°ng t·∫°o
  const prompt = `
B·∫°n l√† m·ªôt tr·ª£ l√Ω AI gi√∫p vi·∫øt m√¥ t·∫£ h·∫•p d·∫´n cho website.
D·ª±a tr√™n th√¥ng tin sau, h√£y t·∫°o m·ªôt ƒëo·∫°n m√¥ t·∫£ sinh ƒë·ªông, thu h√∫t v√† t·ª± nhi√™n cho website.
- T√™n website: Quizz Online 
- Lo·∫°i website: ${websiteType}
- M·ª•c ƒë√≠ch: ${purpose}
- ƒê·ªëi t∆∞·ª£ng ng∆∞·ªùi d√πng: ${targetAudience || "T·∫•t c·∫£ ng∆∞·ªùi d√πng"}
- C√°c t√≠nh nƒÉng ch√≠nh: ${mainFeatures.join(', ')}

Vi·∫øt ƒëo·∫°n m√¥ t·∫£ ng·∫Øn g·ªçn, r√µ r√†ng, s·ª≠ d·ª•ng ng√¥n ng·ªØ th√¢n thi·ªán v√† h·∫•p d·∫´n.C√≥ l·ªùi ch·∫£o m·ª´ng v√† khuy·∫øn kh√≠ch ng∆∞·ªùi d√πng kh√°m ph√° website.
`;

  try {
    const text = await generateContent(prompt);

    return text.trim();
  } catch (error) {
    console.error("L·ªói khi g·ªçi Gemini:", error);
    return null;
  }
}